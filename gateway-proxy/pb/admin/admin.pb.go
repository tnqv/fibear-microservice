// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/admin.proto

/*
Package admin is a generated protocol buffer package.

It is generated from these files:
	pb/admin.proto

It has these top-level messages:
	LoginRequest
	LoginResponse
	ListReviewsResponse
	ListBlocksResponse
	ListUsersResponse
	UserBlockDate
	Block
	Review
	BlockOrder
	User
	Profile
	Province
*/
package admin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the username and password.
type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the JWT token.
type LoginResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	User  *User  `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type ListReviewsResponse struct {
	Reviews []*Review `protobuf:"bytes,1,rep,name=reviews" json:"reviews,omitempty"`
}

func (m *ListReviewsResponse) Reset()                    { *m = ListReviewsResponse{} }
func (m *ListReviewsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListReviewsResponse) ProtoMessage()               {}
func (*ListReviewsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListReviewsResponse) GetReviews() []*Review {
	if m != nil {
		return m.Reviews
	}
	return nil
}

type ListBlocksResponse struct {
	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
}

func (m *ListBlocksResponse) Reset()                    { *m = ListBlocksResponse{} }
func (m *ListBlocksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBlocksResponse) ProtoMessage()               {}
func (*ListBlocksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListBlocksResponse) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type ListUsersResponse struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	Bears []*User `protobuf:"bytes,2,rep,name=bears" json:"bears,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetBears() []*User {
	if m != nil {
		return m.Bears
	}
	return nil
}

type UserBlockDate struct {
	Id          uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Block       *Block  `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
	BlockDate   string  `protobuf:"bytes,3,opt,name=blockDate" json:"blockDate,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Status      string  `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Price       float64 `protobuf:"fixed64,6,opt,name=price" json:"price,omitempty"`
	IsOrdered   bool    `protobuf:"varint,7,opt,name=isOrdered" json:"isOrdered,omitempty"`
}

func (m *UserBlockDate) Reset()                    { *m = UserBlockDate{} }
func (m *UserBlockDate) String() string            { return proto.CompactTextString(m) }
func (*UserBlockDate) ProtoMessage()               {}
func (*UserBlockDate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserBlockDate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserBlockDate) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *UserBlockDate) GetBlockDate() string {
	if m != nil {
		return m.BlockDate
	}
	return ""
}

func (m *UserBlockDate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserBlockDate) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UserBlockDate) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *UserBlockDate) GetIsOrdered() bool {
	if m != nil {
		return m.IsOrdered
	}
	return false
}

type Block struct {
	Id          uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	HourStart   string `protobuf:"bytes,4,opt,name=hourStart" json:"hourStart,omitempty"`
	HourEnd     string `protobuf:"bytes,5,opt,name=hourEnd" json:"hourEnd,omitempty"`
	IsCreated   bool   `protobuf:"varint,7,opt,name=isCreated" json:"isCreated,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Block) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Block) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Block) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Block) GetHourStart() string {
	if m != nil {
		return m.HourStart
	}
	return ""
}

func (m *Block) GetHourEnd() string {
	if m != nil {
		return m.HourEnd
	}
	return ""
}

func (m *Block) GetIsCreated() bool {
	if m != nil {
		return m.IsCreated
	}
	return false
}

type Review struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserReviewed *User  `protobuf:"bytes,2,opt,name=userReviewed" json:"userReviewed,omitempty"`
	Rate         uint64 `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	User         *User  `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *Review) Reset()                    { *m = Review{} }
func (m *Review) String() string            { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()               {}
func (*Review) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Review) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Review) GetUserReviewed() *User {
	if m != nil {
		return m.UserReviewed
	}
	return nil
}

func (m *Review) GetRate() uint64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Review) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Review) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type BlockOrder struct {
	Id            uint32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserBlockDate *UserBlockDate `protobuf:"bytes,2,opt,name=userBlockDate" json:"userBlockDate,omitempty"`
	User          *User          `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status        string         `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *BlockOrder) Reset()                    { *m = BlockOrder{} }
func (m *BlockOrder) String() string            { return proto.CompactTextString(m) }
func (*BlockOrder) ProtoMessage()               {}
func (*BlockOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BlockOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BlockOrder) GetUserBlockDate() *UserBlockDate {
	if m != nil {
		return m.UserBlockDate
	}
	return nil
}

func (m *BlockOrder) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BlockOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type User struct {
	Id           uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Email        string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Username     string   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	PasswordHash string   `protobuf:"bytes,4,opt,name=passwordHash" json:"passwordHash,omitempty"`
	CreatedAt    string   `protobuf:"bytes,5,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt    string   `protobuf:"bytes,6,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Phone        string   `protobuf:"bytes,7,opt,name=phone" json:"phone,omitempty"`
	RoleId       uint32   `protobuf:"varint,8,opt,name=roleId" json:"roleId,omitempty"`
	Profile      *Profile `protobuf:"bytes,9,opt,name=profile" json:"profile,omitempty"`
	DeviceToken  string   `protobuf:"bytes,10,opt,name=deviceToken" json:"deviceToken,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetRoleId() uint32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

type Profile struct {
	Id          uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Avatar      string    `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	Firstname   string    `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname    string    `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	Birthdate   string    `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
	Sex         uint32    `protobuf:"varint,6,opt,name=sex" json:"sex,omitempty"`
	Province    *Province `protobuf:"bytes,7,opt,name=province" json:"province,omitempty"`
	StarRate    float64   `protobuf:"fixed64,8,opt,name=starRate" json:"starRate,omitempty"`
	Description string    `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Profile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Profile) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Profile) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Profile) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *Profile) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Profile) GetProvince() *Province {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *Profile) GetStarRate() float64 {
	if m != nil {
		return m.StarRate
	}
	return 0
}

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Province struct {
	ProvinceId   uint32 `protobuf:"varint,1,opt,name=provinceId" json:"provinceId,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName" json:"provinceName,omitempty"`
}

func (m *Province) Reset()                    { *m = Province{} }
func (m *Province) String() string            { return proto.CompactTextString(m) }
func (*Province) ProtoMessage()               {}
func (*Province) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Province) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *Province) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "admin.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "admin.LoginResponse")
	proto.RegisterType((*ListReviewsResponse)(nil), "admin.ListReviewsResponse")
	proto.RegisterType((*ListBlocksResponse)(nil), "admin.ListBlocksResponse")
	proto.RegisterType((*ListUsersResponse)(nil), "admin.ListUsersResponse")
	proto.RegisterType((*UserBlockDate)(nil), "admin.UserBlockDate")
	proto.RegisterType((*Block)(nil), "admin.Block")
	proto.RegisterType((*Review)(nil), "admin.Review")
	proto.RegisterType((*BlockOrder)(nil), "admin.BlockOrder")
	proto.RegisterType((*User)(nil), "admin.User")
	proto.RegisterType((*Profile)(nil), "admin.Profile")
	proto.RegisterType((*Province)(nil), "admin.Province")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Admin service

type AdminClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	GetListUser(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListUsersResponse, error)
	GetListReviews(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListReviewsResponse, error)
	GetListBlocks(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListBlocksResponse, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/admin.Admin/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetListUser(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/admin.Admin/GetListUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetListReviews(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListReviewsResponse, error) {
	out := new(ListReviewsResponse)
	err := grpc.Invoke(ctx, "/admin.Admin/GetListReviews", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetListBlocks(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ListBlocksResponse, error) {
	out := new(ListBlocksResponse)
	err := grpc.Invoke(ctx, "/admin.Admin/GetListBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Admin service

type AdminServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	GetListUser(context.Context, *google_protobuf1.Empty) (*ListUsersResponse, error)
	GetListReviews(context.Context, *google_protobuf1.Empty) (*ListReviewsResponse, error)
	GetListBlocks(context.Context, *google_protobuf1.Empty) (*ListBlocksResponse, error)
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetListUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetListUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/GetListUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetListUser(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetListReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetListReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/GetListReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetListReviews(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetListBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetListBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/GetListBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetListBlocks(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Admin_Login_Handler,
		},
		{
			MethodName: "GetListUser",
			Handler:    _Admin_GetListUser_Handler,
		},
		{
			MethodName: "GetListReviews",
			Handler:    _Admin_GetListReviews_Handler,
		},
		{
			MethodName: "GetListBlocks",
			Handler:    _Admin_GetListBlocks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/admin.proto",
}

func init() { proto.RegisterFile("pb/admin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 890 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xcd, 0x8e, 0x23, 0x35,
	0x10, 0x56, 0x77, 0xd2, 0xf9, 0xa9, 0x4c, 0xb2, 0x3b, 0x9e, 0xd1, 0xd0, 0x1b, 0x56, 0x10, 0x2c,
	0x24, 0x22, 0x90, 0xd2, 0x62, 0xb8, 0xcd, 0x01, 0x69, 0x81, 0x5d, 0x58, 0x69, 0x59, 0x50, 0x03,
	0x12, 0x48, 0x48, 0xc8, 0x49, 0x7b, 0x26, 0xd6, 0x66, 0xda, 0x8d, 0xed, 0x64, 0xe1, 0xca, 0x81,
	0x3b, 0xe2, 0x05, 0x10, 0x3c, 0x10, 0x07, 0x5e, 0x81, 0x3b, 0xaf, 0x80, 0x5c, 0xb6, 0xbb, 0x3b,
	0xc9, 0xce, 0xad, 0xab, 0x3e, 0xd7, 0xe7, 0xcf, 0x9f, 0xab, 0x5d, 0x30, 0xa9, 0x96, 0x19, 0x2b,
	0x6e, 0x45, 0xb9, 0xa8, 0x94, 0x34, 0x92, 0x24, 0x18, 0x4c, 0x1f, 0xde, 0x48, 0x79, 0xb3, 0xe1,
	0x19, 0xab, 0x44, 0xc6, 0xca, 0x52, 0x1a, 0x66, 0x84, 0x2c, 0xb5, 0x5b, 0x34, 0x7d, 0xdd, 0xa3,
	0x18, 0x2d, 0xb7, 0xd7, 0x19, 0xbf, 0xad, 0xcc, 0xcf, 0x0e, 0xa4, 0x4f, 0xe0, 0xe4, 0x99, 0xbc,
	0x11, 0x65, 0xce, 0x7f, 0xdc, 0x72, 0x6d, 0xc8, 0x14, 0x06, 0x5b, 0xcd, 0x55, 0xc9, 0x6e, 0x79,
	0x1a, 0xcd, 0xa2, 0xf9, 0x30, 0xaf, 0x63, 0x8b, 0x55, 0x4c, 0xeb, 0x97, 0x52, 0x15, 0x69, 0xec,
	0xb0, 0x10, 0xd3, 0x27, 0x30, 0xf6, 0x3c, 0xba, 0x92, 0xa5, 0xe6, 0xe4, 0x1c, 0x12, 0x23, 0x5f,
	0xf0, 0xd2, 0xb3, 0xb8, 0x80, 0xbc, 0x09, 0x5d, 0x4b, 0x87, 0xe5, 0xa3, 0xcb, 0xd1, 0xc2, 0x1d,
	0xe6, 0x1b, 0xcd, 0x55, 0x8e, 0x00, 0xfd, 0x10, 0xce, 0x9e, 0x09, 0x6d, 0x72, 0xbe, 0x13, 0xfc,
	0xa5, 0xae, 0xd9, 0xde, 0x81, 0xbe, 0x72, 0xa9, 0x34, 0x9a, 0x75, 0xe6, 0xa3, 0xcb, 0xb1, 0x2f,
	0x75, 0x0b, 0xf3, 0x80, 0xd2, 0x2b, 0x20, 0xb6, 0xfe, 0xa3, 0x8d, 0x5c, 0xbd, 0x68, 0xca, 0xdf,
	0x86, 0xde, 0x12, 0x33, 0xbe, 0xfa, 0xc4, 0x57, 0xe3, 0xb2, 0xdc, 0x63, 0xf4, 0x3b, 0x38, 0xb5,
	0xb5, 0x56, 0x4d, 0x53, 0xfa, 0x16, 0x24, 0x56, 0x58, 0xa8, 0xdc, 0x93, 0xec, 0x10, 0xbb, 0x64,
	0xc9, 0x99, 0xd2, 0x69, 0xfc, 0x8a, 0x25, 0x88, 0xd0, 0xbf, 0x23, 0x18, 0xdb, 0x18, 0x37, 0xfc,
	0x84, 0x19, 0x4e, 0x26, 0x10, 0x8b, 0x02, 0xcd, 0x19, 0xe7, 0xb1, 0x28, 0x08, 0x85, 0x04, 0x65,
	0x78, 0x6b, 0xf6, 0x15, 0x3a, 0x88, 0x3c, 0x84, 0xe1, 0x32, 0x10, 0xa4, 0x1d, 0xf4, 0xb5, 0x49,
	0x90, 0x19, 0x8c, 0x0a, 0xae, 0x57, 0x4a, 0x54, 0xf6, 0xf6, 0xd3, 0x2e, 0xe2, 0xed, 0x14, 0xb9,
	0x80, 0x9e, 0x36, 0xcc, 0x6c, 0x75, 0x9a, 0x20, 0xe8, 0x23, 0x7b, 0x57, 0x95, 0x12, 0x2b, 0x9e,
	0xf6, 0x66, 0xd1, 0x3c, 0xca, 0x5d, 0x60, 0x77, 0x13, 0xfa, 0x0b, 0x55, 0x70, 0xc5, 0x8b, 0xb4,
	0x3f, 0x8b, 0xe6, 0x83, 0xbc, 0x49, 0xd0, 0xbf, 0x22, 0x48, 0x50, 0xdc, 0xd1, 0x49, 0x0e, 0x74,
	0xc4, 0xc7, 0x3a, 0x08, 0x74, 0xb1, 0xc1, 0xdc, 0x11, 0xf0, 0xdb, 0xee, 0xb6, 0x96, 0x5b, 0xf5,
	0x95, 0x61, 0xca, 0x78, 0xed, 0x4d, 0x82, 0xa4, 0xd0, 0xb7, 0xc1, 0xe3, 0xb2, 0xf0, 0xd2, 0x43,
	0xe8, 0x54, 0x7e, 0xac, 0x38, 0x33, 0x6d, 0x95, 0x3e, 0x41, 0xff, 0x88, 0xa0, 0xe7, 0x5a, 0xe4,
	0x48, 0x66, 0x06, 0x27, 0xf6, 0xfa, 0x1c, 0xca, 0x8b, 0x57, 0xb5, 0xe4, 0xde, 0x02, 0xab, 0x5a,
	0x05, 0xe3, 0xbb, 0x39, 0x7e, 0xd7, 0xfd, 0xdc, 0xbd, 0xa3, 0x9f, 0x0f, 0xcd, 0x48, 0x8e, 0xcc,
	0xa0, 0xbf, 0x45, 0x00, 0x68, 0x24, 0x3a, 0x7b, 0x24, 0xf3, 0x0a, 0xc6, 0xdb, 0x76, 0xe3, 0x78,
	0x9d, 0xe7, 0xad, 0xad, 0x6a, 0x2c, 0xdf, 0x5f, 0x5a, 0xab, 0xeb, 0xdc, 0xa5, 0xae, 0x69, 0x88,
	0x6e, 0xbb, 0x21, 0xe8, 0x9f, 0x31, 0x74, 0xed, 0xb2, 0x23, 0x35, 0xe7, 0x90, 0xf0, 0x5b, 0x26,
	0x36, 0xfe, 0x56, 0x5d, 0xb0, 0xf7, 0x68, 0x74, 0x0e, 0x1e, 0x0d, 0x0a, 0x27, 0xe1, 0x91, 0xf8,
	0x8c, 0xe9, 0xb5, 0xdf, 0x68, 0x2f, 0x67, 0xef, 0x70, 0xe5, 0x2e, 0xec, 0x91, 0xf1, 0x16, 0x35,
	0x09, 0x8b, 0x6e, 0xab, 0xc2, 0xa3, 0x3d, 0x87, 0xd6, 0x09, 0xec, 0xdd, 0xb5, 0x2c, 0x39, 0xde,
	0xfd, 0x30, 0x77, 0x81, 0x3d, 0x98, 0x92, 0x1b, 0xfe, 0xb4, 0x48, 0x07, 0xa8, 0xdd, 0x47, 0x64,
	0x0e, 0xfd, 0x4a, 0xc9, 0x6b, 0xb1, 0xe1, 0xe9, 0x10, 0x4d, 0x99, 0x78, 0x53, 0xbe, 0x74, 0xd9,
	0x3c, 0xc0, 0xee, 0xe2, 0x76, 0x62, 0xc5, 0xbf, 0xc6, 0x57, 0x0c, 0xc2, 0xc5, 0xd5, 0x29, 0xfa,
	0x6b, 0x0c, 0x7d, 0x5f, 0x76, 0xe4, 0xd3, 0x05, 0xf4, 0xd8, 0x8e, 0x19, 0xa6, 0xbc, 0x51, 0x3e,
	0xb2, 0x67, 0xb9, 0x16, 0x4a, 0x9b, 0x96, 0x55, 0x4d, 0xc2, 0xfa, 0xb8, 0x61, 0x1e, 0x74, 0x3e,
	0xd5, 0x31, 0xfe, 0xfb, 0x42, 0x99, 0xb5, 0x3d, 0x77, 0xf0, 0xa8, 0x4e, 0x90, 0xfb, 0xd0, 0xd1,
	0xfc, 0x27, 0x74, 0x67, 0x9c, 0xdb, 0x4f, 0xf2, 0x1e, 0x0c, 0x2a, 0x25, 0x77, 0xa2, 0x5c, 0x39,
	0x6b, 0x46, 0x97, 0xf7, 0x9a, 0xa3, 0x62, 0x3a, 0xaf, 0x17, 0xd8, 0x8d, 0xb5, 0x61, 0x2a, 0xb7,
	0xdc, 0x03, 0x7c, 0x03, 0xea, 0xf8, 0xb0, 0x83, 0x87, 0xc7, 0x1d, 0xfc, 0x1c, 0x06, 0x81, 0x93,
	0xbc, 0x01, 0x10, 0x58, 0x9f, 0x06, 0x43, 0x5a, 0x19, 0x6c, 0x07, 0x1f, 0x3d, 0xb7, 0xc7, 0x8c,
	0x7d, 0x3b, 0xb4, 0x72, 0x97, 0xff, 0xc5, 0x90, 0x3c, 0xb2, 0x52, 0xc9, 0xe7, 0x90, 0xe0, 0x54,
	0x21, 0x67, 0x5e, 0x7b, 0x7b, 0x56, 0x4d, 0xcf, 0xf7, 0x93, 0xee, 0xc1, 0xa6, 0x0f, 0x7e, 0xf9,
	0xe7, 0xdf, 0xdf, 0xe3, 0x33, 0x3a, 0xc9, 0x76, 0xef, 0x67, 0x6c, 0x6b, 0xd6, 0xd9, 0xc6, 0xe2,
	0x57, 0xd1, 0xbb, 0xe4, 0x5b, 0x18, 0x7d, 0xca, 0x4d, 0x78, 0xe3, 0xc9, 0xc5, 0xc2, 0x4d, 0xc6,
	0x45, 0x98, 0x8c, 0x8b, 0xc7, 0x76, 0x32, 0x4e, 0xd3, 0xc0, 0x7b, 0x38, 0x0c, 0xe8, 0x6b, 0xc8,
	0x7d, 0x4a, 0xee, 0x21, 0xb7, 0x5d, 0x94, 0xb9, 0x11, 0xf0, 0x03, 0x4c, 0x3c, 0xb3, 0x9f, 0x5c,
	0x77, 0x92, 0x4f, 0x5b, 0xe4, 0x07, 0x53, 0x2e, 0x48, 0x27, 0xa7, 0x0d, 0xbd, 0x9f, 0x6b, 0xe4,
	0x7b, 0x18, 0xfb, 0x0d, 0xdc, 0x68, 0xbb, 0x93, 0xff, 0x41, 0x8b, 0x7f, 0x7f, 0x0a, 0xd2, 0x14,
	0xe9, 0x09, 0xb9, 0xdf, 0xd0, 0xbb, 0xc9, 0xb7, 0xec, 0x21, 0xc9, 0x07, 0xff, 0x07, 0x00, 0x00,
	0xff, 0xff, 0xb4, 0xcb, 0x7b, 0xd2, 0x60, 0x08, 0x00, 0x00,
}
