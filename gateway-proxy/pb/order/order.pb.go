// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/order.proto

/*
Package order is a generated protocol buffer package.

It is generated from these files:
	pb/order.proto

It has these top-level messages:
	OrderBlockRequest
	OrderBlockResponse
	ListOrderRequest
	ListOrderResponse
	ConfirmOrderRequest
	ConfirmOrderResponse
	FinishServiceRequest
	FinishServiceResponse
	UserHistoryOrder
	BlockOrder
	User
	Profile
	Province
	Review
	UserBlockDate
	Block
*/
package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OrderBlockRequest struct {
	UserId  uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	BlockId uint32 `protobuf:"varint,2,opt,name=blockId" json:"blockId,omitempty"`
}

func (m *OrderBlockRequest) Reset()                    { *m = OrderBlockRequest{} }
func (m *OrderBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderBlockRequest) ProtoMessage()               {}
func (*OrderBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OrderBlockRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OrderBlockRequest) GetBlockId() uint32 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

type OrderBlockResponse struct {
	Message string      `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  string      `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Order   *BlockOrder `protobuf:"bytes,3,opt,name=order" json:"order,omitempty"`
}

func (m *OrderBlockResponse) Reset()                    { *m = OrderBlockResponse{} }
func (m *OrderBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderBlockResponse) ProtoMessage()               {}
func (*OrderBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderBlockResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderBlockResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderBlockResponse) GetOrder() *BlockOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type ListOrderRequest struct {
	UserId uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Date   uint64 `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
}

func (m *ListOrderRequest) Reset()                    { *m = ListOrderRequest{} }
func (m *ListOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOrderRequest) ProtoMessage()               {}
func (*ListOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListOrderRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListOrderRequest) GetDate() uint64 {
	if m != nil {
		return m.Date
	}
	return 0
}

type ListOrderResponse struct {
	Orders []*BlockOrder `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *ListOrderResponse) Reset()                    { *m = ListOrderResponse{} }
func (m *ListOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrderResponse) ProtoMessage()               {}
func (*ListOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListOrderResponse) GetOrders() []*BlockOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type ConfirmOrderRequest struct {
	OrderId uint32 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *ConfirmOrderRequest) Reset()                    { *m = ConfirmOrderRequest{} }
func (m *ConfirmOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfirmOrderRequest) ProtoMessage()               {}
func (*ConfirmOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConfirmOrderRequest) GetOrderId() uint32 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type ConfirmOrderResponse struct {
	Message    string      `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status     string      `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	BlockOrder *BlockOrder `protobuf:"bytes,3,opt,name=blockOrder" json:"blockOrder,omitempty"`
}

func (m *ConfirmOrderResponse) Reset()                    { *m = ConfirmOrderResponse{} }
func (m *ConfirmOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfirmOrderResponse) ProtoMessage()               {}
func (*ConfirmOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConfirmOrderResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ConfirmOrderResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ConfirmOrderResponse) GetBlockOrder() *BlockOrder {
	if m != nil {
		return m.BlockOrder
	}
	return nil
}

type FinishServiceRequest struct {
	OrderBlockId uint32 `protobuf:"varint,1,opt,name=orderBlockId" json:"orderBlockId,omitempty"`
}

func (m *FinishServiceRequest) Reset()                    { *m = FinishServiceRequest{} }
func (m *FinishServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*FinishServiceRequest) ProtoMessage()               {}
func (*FinishServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FinishServiceRequest) GetOrderBlockId() uint32 {
	if m != nil {
		return m.OrderBlockId
	}
	return 0
}

type FinishServiceResponse struct {
	Status  string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *FinishServiceResponse) Reset()                    { *m = FinishServiceResponse{} }
func (m *FinishServiceResponse) String() string            { return proto.CompactTextString(m) }
func (*FinishServiceResponse) ProtoMessage()               {}
func (*FinishServiceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FinishServiceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FinishServiceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UserHistoryOrder struct {
	Id     uint32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Order  *BlockOrder `protobuf:"bytes,2,opt,name=order" json:"order,omitempty"`
	Review *Review     `protobuf:"bytes,3,opt,name=review" json:"review,omitempty"`
}

func (m *UserHistoryOrder) Reset()                    { *m = UserHistoryOrder{} }
func (m *UserHistoryOrder) String() string            { return proto.CompactTextString(m) }
func (*UserHistoryOrder) ProtoMessage()               {}
func (*UserHistoryOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UserHistoryOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserHistoryOrder) GetOrder() *BlockOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *UserHistoryOrder) GetReview() *Review {
	if m != nil {
		return m.Review
	}
	return nil
}

type BlockOrder struct {
	Id            uint32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserBlockDate *UserBlockDate `protobuf:"bytes,2,opt,name=userBlockDate" json:"userBlockDate,omitempty"`
	User          *User          `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status        string         `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *BlockOrder) Reset()                    { *m = BlockOrder{} }
func (m *BlockOrder) String() string            { return proto.CompactTextString(m) }
func (*BlockOrder) ProtoMessage()               {}
func (*BlockOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BlockOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BlockOrder) GetUserBlockDate() *UserBlockDate {
	if m != nil {
		return m.UserBlockDate
	}
	return nil
}

func (m *BlockOrder) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BlockOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type User struct {
	Id           uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Email        string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Username     string   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	PasswordHash string   `protobuf:"bytes,4,opt,name=passwordHash" json:"passwordHash,omitempty"`
	Profile      *Profile `protobuf:"bytes,5,opt,name=profile" json:"profile,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type Profile struct {
	Id          uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Avatar      string    `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	Firstname   string    `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname    string    `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	Birthdate   string    `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
	Sex         uint32    `protobuf:"varint,6,opt,name=sex" json:"sex,omitempty"`
	Province    *Province `protobuf:"bytes,7,opt,name=province" json:"province,omitempty"`
	StarRate    float64   `protobuf:"fixed64,8,opt,name=starRate" json:"starRate,omitempty"`
	Description string    `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Profile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Profile) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Profile) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Profile) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *Profile) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Profile) GetProvince() *Province {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *Profile) GetStarRate() float64 {
	if m != nil {
		return m.StarRate
	}
	return 0
}

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Province struct {
	ProvinceId   uint32 `protobuf:"varint,1,opt,name=provinceId" json:"provinceId,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName" json:"provinceName,omitempty"`
}

func (m *Province) Reset()                    { *m = Province{} }
func (m *Province) String() string            { return proto.CompactTextString(m) }
func (*Province) ProtoMessage()               {}
func (*Province) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Province) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *Province) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

type Review struct {
	UserReviewed *User  `protobuf:"bytes,1,opt,name=userReviewed" json:"userReviewed,omitempty"`
	Rate         uint64 `protobuf:"varint,2,opt,name=rate" json:"rate,omitempty"`
	UserId       uint64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *Review) Reset()                    { *m = Review{} }
func (m *Review) String() string            { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()               {}
func (*Review) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Review) GetUserReviewed() *User {
	if m != nil {
		return m.UserReviewed
	}
	return nil
}

func (m *Review) GetRate() uint64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Review) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Review) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UserBlockDate struct {
	Id          uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Block       *Block  `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
	BlockDate   string  `protobuf:"bytes,3,opt,name=blockDate" json:"blockDate,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Status      string  `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Price       float64 `protobuf:"fixed64,6,opt,name=price" json:"price,omitempty"`
}

func (m *UserBlockDate) Reset()                    { *m = UserBlockDate{} }
func (m *UserBlockDate) String() string            { return proto.CompactTextString(m) }
func (*UserBlockDate) ProtoMessage()               {}
func (*UserBlockDate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UserBlockDate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserBlockDate) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *UserBlockDate) GetBlockDate() string {
	if m != nil {
		return m.BlockDate
	}
	return ""
}

func (m *UserBlockDate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserBlockDate) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UserBlockDate) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Block struct {
	Id          uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	HourStart   string `protobuf:"bytes,4,opt,name=hourStart" json:"hourStart,omitempty"`
	HourEnd     string `protobuf:"bytes,5,opt,name=hourEnd" json:"hourEnd,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Block) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Block) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Block) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Block) GetHourStart() string {
	if m != nil {
		return m.HourStart
	}
	return ""
}

func (m *Block) GetHourEnd() string {
	if m != nil {
		return m.HourEnd
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderBlockRequest)(nil), "order.OrderBlockRequest")
	proto.RegisterType((*OrderBlockResponse)(nil), "order.OrderBlockResponse")
	proto.RegisterType((*ListOrderRequest)(nil), "order.ListOrderRequest")
	proto.RegisterType((*ListOrderResponse)(nil), "order.ListOrderResponse")
	proto.RegisterType((*ConfirmOrderRequest)(nil), "order.ConfirmOrderRequest")
	proto.RegisterType((*ConfirmOrderResponse)(nil), "order.ConfirmOrderResponse")
	proto.RegisterType((*FinishServiceRequest)(nil), "order.FinishServiceRequest")
	proto.RegisterType((*FinishServiceResponse)(nil), "order.FinishServiceResponse")
	proto.RegisterType((*UserHistoryOrder)(nil), "order.UserHistoryOrder")
	proto.RegisterType((*BlockOrder)(nil), "order.BlockOrder")
	proto.RegisterType((*User)(nil), "order.User")
	proto.RegisterType((*Profile)(nil), "order.Profile")
	proto.RegisterType((*Province)(nil), "order.Province")
	proto.RegisterType((*Review)(nil), "order.Review")
	proto.RegisterType((*UserBlockDate)(nil), "order.UserBlockDate")
	proto.RegisterType((*Block)(nil), "order.Block")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Order service

type OrderClient interface {
	GetListOrders(ctx context.Context, in *ListOrderRequest, opts ...grpc.CallOption) (*ListOrderResponse, error)
	OrderBlock(ctx context.Context, in *OrderBlockRequest, opts ...grpc.CallOption) (*OrderBlockResponse, error)
	ConfirmOrder(ctx context.Context, in *ConfirmOrderRequest, opts ...grpc.CallOption) (*ConfirmOrderResponse, error)
	FinishService(ctx context.Context, in *FinishServiceRequest, opts ...grpc.CallOption) (*FinishServiceResponse, error)
}

type orderClient struct {
	cc *grpc.ClientConn
}

func NewOrderClient(cc *grpc.ClientConn) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) GetListOrders(ctx context.Context, in *ListOrderRequest, opts ...grpc.CallOption) (*ListOrderResponse, error) {
	out := new(ListOrderResponse)
	err := grpc.Invoke(ctx, "/order.Order/GetListOrders", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) OrderBlock(ctx context.Context, in *OrderBlockRequest, opts ...grpc.CallOption) (*OrderBlockResponse, error) {
	out := new(OrderBlockResponse)
	err := grpc.Invoke(ctx, "/order.Order/OrderBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ConfirmOrder(ctx context.Context, in *ConfirmOrderRequest, opts ...grpc.CallOption) (*ConfirmOrderResponse, error) {
	out := new(ConfirmOrderResponse)
	err := grpc.Invoke(ctx, "/order.Order/ConfirmOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) FinishService(ctx context.Context, in *FinishServiceRequest, opts ...grpc.CallOption) (*FinishServiceResponse, error) {
	out := new(FinishServiceResponse)
	err := grpc.Invoke(ctx, "/order.Order/FinishService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Order service

type OrderServer interface {
	GetListOrders(context.Context, *ListOrderRequest) (*ListOrderResponse, error)
	OrderBlock(context.Context, *OrderBlockRequest) (*OrderBlockResponse, error)
	ConfirmOrder(context.Context, *ConfirmOrderRequest) (*ConfirmOrderResponse, error)
	FinishService(context.Context, *FinishServiceRequest) (*FinishServiceResponse, error)
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_GetListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/GetListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetListOrders(ctx, req.(*ListOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_OrderBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).OrderBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/OrderBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).OrderBlock(ctx, req.(*OrderBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_ConfirmOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).ConfirmOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/ConfirmOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).ConfirmOrder(ctx, req.(*ConfirmOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_FinishService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).FinishService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/FinishService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).FinishService(ctx, req.(*FinishServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListOrders",
			Handler:    _Order_GetListOrders_Handler,
		},
		{
			MethodName: "OrderBlock",
			Handler:    _Order_OrderBlock_Handler,
		},
		{
			MethodName: "ConfirmOrder",
			Handler:    _Order_ConfirmOrder_Handler,
		},
		{
			MethodName: "FinishService",
			Handler:    _Order_FinishService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/order.proto",
}

func init() { proto.RegisterFile("pb/order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 889 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4f, 0x6f, 0x23, 0x35,
	0x14, 0xd7, 0x4c, 0x32, 0x49, 0xf3, 0xda, 0x74, 0x5b, 0x93, 0x2d, 0xb3, 0xd3, 0x0a, 0x82, 0x25,
	0x44, 0x59, 0xa4, 0x8d, 0xb6, 0xdc, 0x7a, 0xd8, 0x03, 0xb0, 0xb0, 0x95, 0xd0, 0x82, 0xbc, 0xda,
	0x23, 0x87, 0x49, 0xe2, 0xb6, 0x16, 0xe9, 0x78, 0xb0, 0xdd, 0x2c, 0x68, 0xc5, 0x05, 0x09, 0x38,
	0x23, 0x24, 0x6e, 0x7c, 0x08, 0x3e, 0x0b, 0x5f, 0x81, 0x0f, 0x82, 0xfc, 0xec, 0x99, 0xf1, 0x64,
	0x02, 0x95, 0xf6, 0x12, 0xcd, 0xfb, 0xe3, 0xf7, 0xfb, 0x3d, 0xbf, 0xe7, 0xf7, 0x02, 0xfb, 0xe5,
	0x7c, 0x26, 0xd5, 0x92, 0xab, 0x47, 0xa5, 0x92, 0x46, 0x92, 0x04, 0x85, 0xec, 0xe4, 0x4a, 0xca,
	0xab, 0x15, 0x9f, 0xe5, 0xa5, 0x98, 0xe5, 0x45, 0x21, 0x4d, 0x6e, 0x84, 0x2c, 0xb4, 0x73, 0xa2,
	0x4f, 0xe1, 0xf0, 0x2b, 0xeb, 0xf6, 0xc9, 0x4a, 0x2e, 0xbe, 0x65, 0xfc, 0xbb, 0x5b, 0xae, 0x0d,
	0x39, 0x82, 0xc1, 0xad, 0xe6, 0xea, 0x62, 0x99, 0x46, 0xd3, 0xe8, 0x74, 0xcc, 0xbc, 0x44, 0x52,
	0x18, 0xce, 0xad, 0xdf, 0xc5, 0x32, 0x8d, 0xd1, 0x50, 0x89, 0x54, 0x02, 0x09, 0xc3, 0xe8, 0x52,
	0x16, 0x9a, 0x5b, 0xff, 0x1b, 0xae, 0x75, 0x7e, 0xc5, 0x31, 0xd0, 0x88, 0x55, 0xa2, 0x45, 0xd0,
	0x26, 0x37, 0xb7, 0x1a, 0x03, 0x8d, 0x98, 0x97, 0xc8, 0x07, 0xe0, 0x58, 0xa7, 0xbd, 0x69, 0x74,
	0xba, 0x7b, 0x76, 0xf8, 0xc8, 0x25, 0x84, 0x61, 0x11, 0x80, 0x39, 0x3b, 0x7d, 0x02, 0x07, 0x5f,
	0x0a, 0x6d, 0x9c, 0xee, 0x0e, 0xda, 0x04, 0xfa, 0xcb, 0xdc, 0x70, 0x84, 0xea, 0x33, 0xfc, 0xa6,
	0x4f, 0xe0, 0x30, 0x38, 0xef, 0xf9, 0x7e, 0x08, 0x03, 0x8c, 0xae, 0xd3, 0x68, 0xda, 0xdb, 0x0e,
	0xef, 0x1d, 0xe8, 0x0c, 0xde, 0xfa, 0x54, 0x16, 0x97, 0x42, 0xdd, 0xb4, 0x28, 0xa4, 0x30, 0x44,
	0x87, 0x9a, 0x43, 0x25, 0xd2, 0xd7, 0x30, 0x69, 0x1f, 0x78, 0xe3, 0x3b, 0x7a, 0x0c, 0x30, 0xaf,
	0x09, 0xfd, 0xf7, 0x45, 0x05, 0x4e, 0xf4, 0x1c, 0x26, 0x9f, 0x8b, 0x42, 0xe8, 0xeb, 0x17, 0x5c,
	0xad, 0xc5, 0x82, 0x57, 0x74, 0x29, 0xec, 0xc9, 0xba, 0x6c, 0x35, 0xe7, 0x96, 0x8e, 0x5e, 0xc0,
	0xfd, 0x8d, 0xb3, 0x9e, 0x79, 0xc3, 0x2f, 0x6a, 0xf1, 0x0b, 0x32, 0x8a, 0x5b, 0x19, 0x51, 0x05,
	0x07, 0x2f, 0x35, 0x57, 0xcf, 0x84, 0x36, 0x52, 0xfd, 0x80, 0xd4, 0xc8, 0x3e, 0xc4, 0xa2, 0x02,
	0x8e, 0xc5, 0xb2, 0xe9, 0x80, 0xf8, 0xff, 0x3b, 0x80, 0xbc, 0x0f, 0x03, 0xc5, 0xd7, 0x82, 0xbf,
	0xf2, 0x57, 0x30, 0xf6, 0x9e, 0x0c, 0x95, 0xcc, 0x1b, 0xe9, 0x6f, 0x11, 0x40, 0x73, 0xb8, 0x03,
	0x77, 0x0e, 0x63, 0xdb, 0x25, 0xe8, 0xf1, 0x59, 0xd5, 0x24, 0xbb, 0x67, 0x13, 0x1f, 0xec, 0x65,
	0x68, 0x63, 0x6d, 0x57, 0xf2, 0x2e, 0xf4, 0xad, 0xc2, 0xe3, 0xef, 0x06, 0x47, 0x18, 0x1a, 0x82,
	0x1b, 0xea, 0x87, 0x37, 0x44, 0xff, 0x88, 0xa0, 0x6f, 0xdd, 0x3a, 0x6c, 0x26, 0x90, 0xf0, 0x9b,
	0x5c, 0xac, 0xfc, 0xc5, 0x39, 0x81, 0x64, 0xb0, 0x63, 0xc3, 0x15, 0xf9, 0x0d, 0x47, 0xac, 0x11,
	0xab, 0x65, 0x5b, 0xc1, 0x32, 0xd7, 0xfa, 0x95, 0x54, 0xcb, 0x67, 0xb9, 0xbe, 0xf6, 0x40, 0x2d,
	0x1d, 0x39, 0x85, 0x61, 0xa9, 0xe4, 0xa5, 0x58, 0xf1, 0x34, 0x41, 0xaa, 0xfb, 0x9e, 0xea, 0xd7,
	0x4e, 0xcb, 0x2a, 0x33, 0xfd, 0x25, 0x86, 0xa1, 0x57, 0x76, 0xb8, 0x1d, 0xc1, 0x20, 0x5f, 0xe7,
	0x26, 0x57, 0x55, 0x3b, 0x3a, 0x89, 0x9c, 0xc0, 0xe8, 0x52, 0x28, 0x6d, 0x02, 0x7a, 0x8d, 0xc2,
	0x72, 0x5f, 0xe5, 0xde, 0xe8, 0xb8, 0xd5, 0xb2, 0x3d, 0x39, 0x17, 0xca, 0x5c, 0xe3, 0xe3, 0x4c,
	0xdc, 0xc9, 0x5a, 0x41, 0x0e, 0xa0, 0xa7, 0xf9, 0xf7, 0xe9, 0x00, 0x09, 0xd8, 0x4f, 0xf2, 0x11,
	0xec, 0x94, 0x4a, 0xae, 0x45, 0xb1, 0xe0, 0xe9, 0x10, 0x13, 0xb9, 0xd7, 0x24, 0x82, 0x6a, 0x56,
	0x3b, 0x58, 0x60, 0x6d, 0x72, 0xc5, 0x6c, 0xec, 0x9d, 0x69, 0x74, 0x1a, 0xb1, 0x5a, 0x26, 0x53,
	0xd8, 0x5d, 0x72, 0xbd, 0x50, 0xa2, 0xb4, 0xa3, 0x30, 0x1d, 0x21, 0x74, 0xa8, 0xa2, 0xcf, 0x61,
	0xa7, 0x8a, 0x49, 0xde, 0x01, 0xa8, 0xa2, 0xd6, 0x4f, 0x24, 0xd0, 0x60, 0x09, 0xbc, 0xf4, 0xdc,
	0xa6, 0x19, 0xfb, 0x12, 0x04, 0x3a, 0xfa, 0x6b, 0x04, 0x03, 0xd7, 0x98, 0x64, 0x06, 0x7b, 0xb6,
	0x7a, 0x4e, 0xe2, 0x2e, 0xe0, 0x46, 0xf7, 0xb4, 0x1c, 0xec, 0xf8, 0x52, 0xc1, 0xf8, 0xb2, 0xdf,
	0xc1, 0xa8, 0xeb, 0xa1, 0xb6, 0x1a, 0x75, 0x1b, 0x99, 0xf5, 0xbb, 0x99, 0xfd, 0x15, 0xc1, 0xb8,
	0xd5, 0xd5, 0x9d, 0x42, 0x53, 0x48, 0x70, 0x74, 0xf8, 0xa7, 0xb0, 0x17, 0xbe, 0x40, 0xe6, 0x4c,
	0x58, 0xba, 0xfa, 0xc9, 0xf8, 0xa2, 0xd7, 0x8a, 0xbb, 0x59, 0x04, 0x2f, 0x23, 0x69, 0xcd, 0x8e,
	0x09, 0x24, 0xa5, 0x12, 0x0b, 0x8e, 0x65, 0x8f, 0x98, 0x13, 0xe8, 0xcf, 0x11, 0x24, 0x08, 0xdf,
	0xe1, 0xba, 0x81, 0x14, 0x77, 0x91, 0x08, 0xf4, 0x83, 0xce, 0xec, 0x57, 0x8d, 0x77, 0x2d, 0x6f,
	0xd5, 0x0b, 0x93, 0x2b, 0xe3, 0xd9, 0x35, 0x0a, 0x3b, 0xbf, 0xac, 0xf0, 0xb4, 0x58, 0x7a, 0x72,
	0x95, 0x78, 0xf6, 0x67, 0x0f, 0x12, 0x37, 0x46, 0x38, 0x8c, 0xbf, 0xe0, 0xa6, 0xde, 0x20, 0x9a,
	0xbc, 0xed, 0x6f, 0x69, 0x73, 0x29, 0x65, 0x69, 0xd7, 0xe0, 0xe6, 0x27, 0x7d, 0xef, 0xa7, 0xbf,
	0xff, 0xf9, 0x3d, 0x3e, 0x26, 0x0f, 0x66, 0xeb, 0xc7, 0x6e, 0x71, 0xbb, 0x5f, 0x3d, 0x7b, 0xed,
	0xaa, 0xf9, 0x23, 0xf9, 0x06, 0xa0, 0x59, 0xab, 0xa4, 0x0a, 0xd5, 0x59, 0xd8, 0xd9, 0x83, 0x2d,
	0x16, 0x8f, 0x92, 0x21, 0xca, 0x84, 0xde, 0x6b, 0x50, 0xb0, 0x50, 0xe7, 0xd1, 0x43, 0xc2, 0x61,
	0x2f, 0xdc, 0x49, 0x24, 0xf3, 0x61, 0xb6, 0x6c, 0xb6, 0xec, 0x78, 0xab, 0xcd, 0x83, 0x9c, 0x20,
	0xc8, 0x51, 0x76, 0xd8, 0x80, 0x2c, 0x9c, 0x9f, 0x85, 0xb9, 0x82, 0x71, 0x6b, 0x83, 0x90, 0x2a,
	0xd6, 0xb6, 0x9d, 0x94, 0x9d, 0x6c, 0x37, 0x7a, 0xa4, 0x63, 0x44, 0xba, 0x9f, 0x1d, 0x34, 0x48,
	0x97, 0xe8, 0x78, 0x1e, 0x3d, 0x9c, 0x0f, 0xf0, 0x3f, 0xcd, 0xc7, 0xff, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x1d, 0x85, 0xe1, 0x0e, 0x0a, 0x09, 0x00, 0x00,
}
