// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	pb/auth.proto

It has these top-level messages:
	RefreshTokenRequest
	RefreshTokenResponse
	LoginRequest
	LoginResponse
	User
	Profile
	Province
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RefreshTokenRequest struct {
	UserId uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RefreshTokenRequest) Reset()                    { *m = RefreshTokenRequest{} }
func (m *RefreshTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*RefreshTokenRequest) ProtoMessage()               {}
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RefreshTokenRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RefreshTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RefreshTokenResponse struct {
	Status  string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *RefreshTokenResponse) Reset()                    { *m = RefreshTokenResponse{} }
func (m *RefreshTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*RefreshTokenResponse) ProtoMessage()               {}
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RefreshTokenResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RefreshTokenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message containing the username and password.
type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the JWT token.
type LoginResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	User  *User  `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// The user message containing the user.
type User struct {
	Id           uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Email        string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Username     string   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	PasswordHash string   `protobuf:"bytes,4,opt,name=passwordHash" json:"passwordHash,omitempty"`
	RoleId       uint32   `protobuf:"varint,5,opt,name=roleId" json:"roleId,omitempty"`
	Profile      *Profile `protobuf:"bytes,6,opt,name=profile" json:"profile,omitempty"`
	DeviceToken  string   `protobuf:"bytes,7,opt,name=deviceToken" json:"deviceToken,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetRoleId() uint32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

type Profile struct {
	Id        uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Avatar    string    `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	Firstname string    `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string    `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	Birthdate string    `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
	Sex       uint32    `protobuf:"varint,6,opt,name=sex" json:"sex,omitempty"`
	Province  *Province `protobuf:"bytes,7,opt,name=province" json:"province,omitempty"`
	StarRate  float64   `protobuf:"fixed64,8,opt,name=starRate" json:"starRate,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Profile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Profile) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Profile) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Profile) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *Profile) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Profile) GetProvince() *Province {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *Profile) GetStarRate() float64 {
	if m != nil {
		return m.StarRate
	}
	return 0
}

type Province struct {
	ProvinceId   uint32 `protobuf:"varint,1,opt,name=provinceId" json:"provinceId,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName" json:"provinceName,omitempty"`
}

func (m *Province) Reset()                    { *m = Province{} }
func (m *Province) String() string            { return proto.CompactTextString(m) }
func (*Province) ProtoMessage()               {}
func (*Province) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Province) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *Province) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func init() {
	proto.RegisterType((*RefreshTokenRequest)(nil), "auth.RefreshTokenRequest")
	proto.RegisterType((*RefreshTokenResponse)(nil), "auth.RefreshTokenResponse")
	proto.RegisterType((*LoginRequest)(nil), "auth.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "auth.LoginResponse")
	proto.RegisterType((*User)(nil), "auth.User")
	proto.RegisterType((*Profile)(nil), "auth.Profile")
	proto.RegisterType((*Province)(nil), "auth.Province")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/auth.Auth/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	out := new(RefreshTokenResponse)
	err := grpc.Invoke(ctx, "/auth.Auth/RefreshToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _Auth_RefreshToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/auth.proto",
}

func init() { proto.RegisterFile("pb/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0x95, 0xd3, 0x3c, 0x6f, 0x1e, 0x42, 0x4e, 0xa9, 0xa6, 0xa3, 0xaa, 0x8a, 0x66, 0x43, 0x94,
	0x45, 0x23, 0xc2, 0xae, 0x3b, 0x84, 0x40, 0xad, 0x40, 0x15, 0xb2, 0xe0, 0x03, 0x9c, 0xe6, 0x26,
	0xb1, 0x98, 0x8c, 0x07, 0xdb, 0x09, 0xac, 0xf9, 0x05, 0x7e, 0x87, 0x7f, 0x60, 0xc1, 0x27, 0xc0,
	0x87, 0x20, 0x3f, 0xc6, 0x9d, 0x40, 0x77, 0x73, 0xce, 0x9d, 0x7b, 0xee, 0x39, 0xd7, 0x36, 0x0c,
	0xcb, 0xe5, 0x9c, 0xef, 0xcd, 0xf6, 0xaa, 0x54, 0xd2, 0x48, 0xda, 0xb4, 0xdf, 0xe9, 0xc5, 0x46,
	0xca, 0x4d, 0x8e, 0x73, 0x5e, 0x8a, 0x39, 0x2f, 0x0a, 0x69, 0xb8, 0x11, 0xb2, 0xd0, 0xfe, 0x9f,
	0xec, 0x15, 0x8c, 0x19, 0xae, 0x15, 0xea, 0xed, 0x07, 0xf9, 0x09, 0x0b, 0x86, 0x9f, 0xf7, 0xa8,
	0x0d, 0x3d, 0x83, 0xf6, 0x5e, 0xa3, 0xba, 0x5d, 0x25, 0x64, 0x42, 0xa6, 0x43, 0x16, 0x10, 0x3d,
	0x85, 0x96, 0xb1, 0xff, 0x25, 0x8d, 0x09, 0x99, 0xf6, 0x98, 0x07, 0xd9, 0x0d, 0x9c, 0x1e, 0x8b,
	0xe8, 0x52, 0x16, 0x1a, 0xad, 0x8a, 0x36, 0xdc, 0xec, 0xb5, 0x53, 0xe9, 0xb1, 0x80, 0x68, 0x02,
	0x9d, 0x1d, 0x6a, 0xcd, 0x37, 0x18, 0x74, 0x2a, 0x98, 0xbd, 0x81, 0xc1, 0x3b, 0xb9, 0x11, 0xd1,
	0x47, 0x0a, 0x5d, 0x3b, 0xb9, 0xe0, 0x3b, 0x0c, 0x1a, 0x11, 0xdb, 0x5a, 0xc9, 0xb5, 0xfe, 0x22,
	0xd5, 0x2a, 0xc8, 0x44, 0x9c, 0xbd, 0x86, 0x61, 0xd0, 0x09, 0x56, 0xa2, 0x71, 0x52, 0x33, 0x4e,
	0x2f, 0xa1, 0x69, 0xe5, 0x5c, 0x7b, 0x7f, 0x01, 0x57, 0x6e, 0x79, 0x1f, 0x35, 0x2a, 0xe6, 0xf8,
	0xec, 0x27, 0x81, 0xa6, 0x85, 0x74, 0x04, 0x0d, 0x51, 0xed, 0xa2, 0x21, 0xdc, 0x1e, 0x70, 0xc7,
	0x45, 0x5e, 0xed, 0xc1, 0x81, 0x23, 0xb7, 0x27, 0xff, 0xb8, 0xcd, 0x60, 0x50, 0xb9, 0xbb, 0xe1,
	0x7a, 0x9b, 0x34, 0x5d, 0xfd, 0x88, 0xb3, 0xfb, 0x52, 0x32, 0xc7, 0xdb, 0x55, 0xd2, 0xf2, 0x5b,
	0xf7, 0x88, 0x3e, 0x83, 0x4e, 0xa9, 0xe4, 0x5a, 0xe4, 0x98, 0xb4, 0x9d, 0xd3, 0xa1, 0x77, 0xfa,
	0xde, 0x93, 0xac, 0xaa, 0xd2, 0x09, 0xf4, 0x57, 0x78, 0x10, 0xf7, 0xe8, 0xce, 0x21, 0xe9, 0xb8,
	0x19, 0x75, 0x2a, 0xfb, 0x4d, 0xa0, 0x13, 0xda, 0xfe, 0x0b, 0x75, 0x06, 0x6d, 0x7e, 0xe0, 0x86,
	0xab, 0x90, 0x2a, 0x20, 0x7a, 0x01, 0xbd, 0xb5, 0x50, 0xda, 0xd4, 0x72, 0x3d, 0x10, 0x36, 0x74,
	0xce, 0x43, 0xd1, 0x87, 0x8a, 0xd8, 0x76, 0x2e, 0x85, 0x32, 0xdb, 0x15, 0x37, 0xe8, 0x32, 0xf5,
	0xd8, 0x03, 0x41, 0x9f, 0xc0, 0x89, 0xc6, 0xaf, 0x2e, 0xd2, 0x90, 0xd9, 0x4f, 0x3a, 0x83, 0x6e,
	0xa9, 0xe4, 0x41, 0x14, 0xf7, 0xe8, 0xcc, 0xf7, 0x17, 0xa3, 0x98, 0xd4, 0xb1, 0x2c, 0xd6, 0xed,
	0x5c, 0x6d, 0xb8, 0x62, 0x56, 0xba, 0x3b, 0x21, 0x53, 0xc2, 0x22, 0xce, 0xee, 0xa0, 0x5b, 0x75,
	0xd0, 0x4b, 0x80, 0xaa, 0x27, 0x5e, 0xe7, 0x1a, 0xe3, 0x0e, 0x26, 0xa0, 0x3b, 0x9b, 0xa1, 0x11,
	0x0e, 0xa6, 0xc6, 0x2d, 0x7e, 0x10, 0x68, 0xbe, 0xdc, 0x9b, 0x2d, 0x7d, 0x0b, 0x2d, 0x77, 0xaf,
	0x28, 0xf5, 0xbe, 0xea, 0x97, 0x35, 0x1d, 0x1f, 0x71, 0xfe, 0xe2, 0x65, 0xe7, 0xdf, 0x7e, 0xfd,
	0xf9, 0xde, 0x18, 0x67, 0xa3, 0xf9, 0xe1, 0xb9, 0x7b, 0x9c, 0xf3, 0xdc, 0xd6, 0xaf, 0xc9, 0x8c,
	0x6e, 0x60, 0x50, 0x7f, 0x36, 0xf4, 0xdc, 0xf7, 0x3f, 0xf2, 0x1e, 0xd3, 0xf4, 0xb1, 0x52, 0x98,
	0x30, 0x71, 0x13, 0xd2, 0xf4, 0x69, 0x9c, 0xa0, 0x6a, 0xbf, 0x5d, 0x93, 0xd9, 0xb2, 0xed, 0xde,
	0xfa, 0x8b, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x70, 0x4e, 0x8b, 0xbc, 0x20, 0x04, 0x00, 0x00,
}
