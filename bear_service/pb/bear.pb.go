// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/bear.proto

/*
Package bear is a generated protocol buffer package.

It is generated from these files:
	pb/bear.proto

It has these top-level messages:
	PostReviewRequest
	PostReviewResponse
	BearRequest
	BearResponse
	ListBearRequest
	ListBearResponse
	BearBlockRequest
	BearBlockResponse
	CreateBlockRequest
	CreateBlockResponse
	GetBlockRegisterRequest
	GetBlockRegisterResponse
	UserBlockDate
	Block
	Review
	BlockOrder
	User
	Profile
	Province
*/
package bear

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostReviewRequest struct {
	UserId      uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	BearId      uint32 `protobuf:"varint,2,opt,name=bearId" json:"bearId,omitempty"`
	Rate        uint32 `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *PostReviewRequest) Reset()                    { *m = PostReviewRequest{} }
func (m *PostReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*PostReviewRequest) ProtoMessage()               {}
func (*PostReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PostReviewRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PostReviewRequest) GetBearId() uint32 {
	if m != nil {
		return m.BearId
	}
	return 0
}

func (m *PostReviewRequest) GetRate() uint32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *PostReviewRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type PostReviewResponse struct {
	Status  string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *PostReviewResponse) Reset()                    { *m = PostReviewResponse{} }
func (m *PostReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*PostReviewResponse) ProtoMessage()               {}
func (*PostReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PostReviewResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PostReviewResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BearRequest struct {
	UserId uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *BearRequest) Reset()                    { *m = BearRequest{} }
func (m *BearRequest) String() string            { return proto.CompactTextString(m) }
func (*BearRequest) ProtoMessage()               {}
func (*BearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BearRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type BearResponse struct {
	User    *User     `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Reviews []*Review `protobuf:"bytes,2,rep,name=reviews" json:"reviews,omitempty"`
}

func (m *BearResponse) Reset()                    { *m = BearResponse{} }
func (m *BearResponse) String() string            { return proto.CompactTextString(m) }
func (*BearResponse) ProtoMessage()               {}
func (*BearResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BearResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BearResponse) GetReviews() []*Review {
	if m != nil {
		return m.Reviews
	}
	return nil
}

type ListBearRequest struct {
	City uint32 `protobuf:"varint,1,opt,name=city" json:"city,omitempty"`
}

func (m *ListBearRequest) Reset()                    { *m = ListBearRequest{} }
func (m *ListBearRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBearRequest) ProtoMessage()               {}
func (*ListBearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListBearRequest) GetCity() uint32 {
	if m != nil {
		return m.City
	}
	return 0
}

type ListBearResponse struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *ListBearResponse) Reset()                    { *m = ListBearResponse{} }
func (m *ListBearResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBearResponse) ProtoMessage()               {}
func (*ListBearResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListBearResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type BearBlockRequest struct {
	UserId uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	BearId uint32 `protobuf:"varint,2,opt,name=bearId" json:"bearId,omitempty"`
	Date   uint64 `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
}

func (m *BearBlockRequest) Reset()                    { *m = BearBlockRequest{} }
func (m *BearBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*BearBlockRequest) ProtoMessage()               {}
func (*BearBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BearBlockRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BearBlockRequest) GetBearId() uint32 {
	if m != nil {
		return m.BearId
	}
	return 0
}

func (m *BearBlockRequest) GetDate() uint64 {
	if m != nil {
		return m.Date
	}
	return 0
}

type BearBlockResponse struct {
	Status         string           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	UserBlockDates []*UserBlockDate `protobuf:"bytes,2,rep,name=userBlockDates" json:"userBlockDates,omitempty"`
}

func (m *BearBlockResponse) Reset()                    { *m = BearBlockResponse{} }
func (m *BearBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*BearBlockResponse) ProtoMessage()               {}
func (*BearBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BearBlockResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BearBlockResponse) GetUserBlockDates() []*UserBlockDate {
	if m != nil {
		return m.UserBlockDates
	}
	return nil
}

type CreateBlockRequest struct {
	UserBlockDate []*UserBlockDate `protobuf:"bytes,1,rep,name=userBlockDate" json:"userBlockDate,omitempty"`
	BearId        uint32           `protobuf:"varint,2,opt,name=bearId" json:"bearId,omitempty"`
}

func (m *CreateBlockRequest) Reset()                    { *m = CreateBlockRequest{} }
func (m *CreateBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBlockRequest) ProtoMessage()               {}
func (*CreateBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateBlockRequest) GetUserBlockDate() []*UserBlockDate {
	if m != nil {
		return m.UserBlockDate
	}
	return nil
}

func (m *CreateBlockRequest) GetBearId() uint32 {
	if m != nil {
		return m.BearId
	}
	return 0
}

type CreateBlockResponse struct {
	Status  string           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Block   []*UserBlockDate `protobuf:"bytes,3,rep,name=block" json:"block,omitempty"`
}

func (m *CreateBlockResponse) Reset()                    { *m = CreateBlockResponse{} }
func (m *CreateBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateBlockResponse) ProtoMessage()               {}
func (*CreateBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateBlockResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CreateBlockResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateBlockResponse) GetBlock() []*UserBlockDate {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBlockRegisterRequest struct {
	UserId uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Date   uint64 `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
}

func (m *GetBlockRegisterRequest) Reset()                    { *m = GetBlockRegisterRequest{} }
func (m *GetBlockRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRegisterRequest) ProtoMessage()               {}
func (*GetBlockRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetBlockRegisterRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetBlockRegisterRequest) GetDate() uint64 {
	if m != nil {
		return m.Date
	}
	return 0
}

type GetBlockRegisterResponse struct {
	Message        string           `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	UserBlockDates []*UserBlockDate `protobuf:"bytes,2,rep,name=userBlockDates" json:"userBlockDates,omitempty"`
}

func (m *GetBlockRegisterResponse) Reset()                    { *m = GetBlockRegisterResponse{} }
func (m *GetBlockRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRegisterResponse) ProtoMessage()               {}
func (*GetBlockRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetBlockRegisterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetBlockRegisterResponse) GetUserBlockDates() []*UserBlockDate {
	if m != nil {
		return m.UserBlockDates
	}
	return nil
}

type UserBlockDate struct {
	Id          uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Block       *Block  `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
	BlockDate   string  `protobuf:"bytes,3,opt,name=blockDate" json:"blockDate,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Status      string  `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Price       float64 `protobuf:"fixed64,6,opt,name=price" json:"price,omitempty"`
	IsOrdered   bool    `protobuf:"varint,7,opt,name=isOrdered" json:"isOrdered,omitempty"`
	BlockId     uint32  `protobuf:"varint,8,opt,name=blockId" json:"blockId,omitempty"`
}

func (m *UserBlockDate) Reset()                    { *m = UserBlockDate{} }
func (m *UserBlockDate) String() string            { return proto.CompactTextString(m) }
func (*UserBlockDate) ProtoMessage()               {}
func (*UserBlockDate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UserBlockDate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserBlockDate) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *UserBlockDate) GetBlockDate() string {
	if m != nil {
		return m.BlockDate
	}
	return ""
}

func (m *UserBlockDate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserBlockDate) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UserBlockDate) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *UserBlockDate) GetIsOrdered() bool {
	if m != nil {
		return m.IsOrdered
	}
	return false
}

func (m *UserBlockDate) GetBlockId() uint32 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

type Block struct {
	Id               uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	HourStart        string `protobuf:"bytes,4,opt,name=hourStart" json:"hourStart,omitempty"`
	HourEnd          string `protobuf:"bytes,5,opt,name=hourEnd" json:"hourEnd,omitempty"`
	IsCreated        bool   `protobuf:"varint,7,opt,name=isCreated" json:"isCreated,omitempty"`
	Price            uint64 `protobuf:"varint,8,opt,name=price" json:"price,omitempty"`
	BlockDescription string `protobuf:"bytes,9,opt,name=blockDescription" json:"blockDescription,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Block) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Block) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Block) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Block) GetHourStart() string {
	if m != nil {
		return m.HourStart
	}
	return ""
}

func (m *Block) GetHourEnd() string {
	if m != nil {
		return m.HourEnd
	}
	return ""
}

func (m *Block) GetIsCreated() bool {
	if m != nil {
		return m.IsCreated
	}
	return false
}

func (m *Block) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Block) GetBlockDescription() string {
	if m != nil {
		return m.BlockDescription
	}
	return ""
}

type Review struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserReviewed *User  `protobuf:"bytes,2,opt,name=userReviewed" json:"userReviewed,omitempty"`
	Rate         uint64 `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	UserId       uint64 `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *Review) Reset()                    { *m = Review{} }
func (m *Review) String() string            { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()               {}
func (*Review) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Review) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Review) GetUserReviewed() *User {
	if m != nil {
		return m.UserReviewed
	}
	return nil
}

func (m *Review) GetRate() uint64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Review) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Review) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type BlockOrder struct {
	Id            uint32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserBlockDate *UserBlockDate `protobuf:"bytes,2,opt,name=userBlockDate" json:"userBlockDate,omitempty"`
	User          *User          `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status        string         `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *BlockOrder) Reset()                    { *m = BlockOrder{} }
func (m *BlockOrder) String() string            { return proto.CompactTextString(m) }
func (*BlockOrder) ProtoMessage()               {}
func (*BlockOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *BlockOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BlockOrder) GetUserBlockDate() *UserBlockDate {
	if m != nil {
		return m.UserBlockDate
	}
	return nil
}

func (m *BlockOrder) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BlockOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type User struct {
	Id           uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Email        string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Username     string   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	PasswordHash string   `protobuf:"bytes,4,opt,name=passwordHash" json:"passwordHash,omitempty"`
	Profile      *Profile `protobuf:"bytes,5,opt,name=profile" json:"profile,omitempty"`
	DeviceToken  string   `protobuf:"bytes,6,opt,name=deviceToken" json:"deviceToken,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

type Profile struct {
	Id          uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Avatar      string    `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	Firstname   string    `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname    string    `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	Birthdate   string    `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
	Sex         uint32    `protobuf:"varint,6,opt,name=sex" json:"sex,omitempty"`
	Province    *Province `protobuf:"bytes,7,opt,name=province" json:"province,omitempty"`
	StarRate    float64   `protobuf:"fixed64,8,opt,name=starRate" json:"starRate,omitempty"`
	Description string    `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Profile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Profile) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Profile) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Profile) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *Profile) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Profile) GetProvince() *Province {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *Profile) GetStarRate() float64 {
	if m != nil {
		return m.StarRate
	}
	return 0
}

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Province struct {
	ProvinceId   uint32 `protobuf:"varint,1,opt,name=provinceId" json:"provinceId,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName" json:"provinceName,omitempty"`
}

func (m *Province) Reset()                    { *m = Province{} }
func (m *Province) String() string            { return proto.CompactTextString(m) }
func (*Province) ProtoMessage()               {}
func (*Province) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Province) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *Province) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func init() {
	proto.RegisterType((*PostReviewRequest)(nil), "bear.PostReviewRequest")
	proto.RegisterType((*PostReviewResponse)(nil), "bear.PostReviewResponse")
	proto.RegisterType((*BearRequest)(nil), "bear.BearRequest")
	proto.RegisterType((*BearResponse)(nil), "bear.BearResponse")
	proto.RegisterType((*ListBearRequest)(nil), "bear.ListBearRequest")
	proto.RegisterType((*ListBearResponse)(nil), "bear.ListBearResponse")
	proto.RegisterType((*BearBlockRequest)(nil), "bear.BearBlockRequest")
	proto.RegisterType((*BearBlockResponse)(nil), "bear.BearBlockResponse")
	proto.RegisterType((*CreateBlockRequest)(nil), "bear.CreateBlockRequest")
	proto.RegisterType((*CreateBlockResponse)(nil), "bear.CreateBlockResponse")
	proto.RegisterType((*GetBlockRegisterRequest)(nil), "bear.GetBlockRegisterRequest")
	proto.RegisterType((*GetBlockRegisterResponse)(nil), "bear.GetBlockRegisterResponse")
	proto.RegisterType((*UserBlockDate)(nil), "bear.UserBlockDate")
	proto.RegisterType((*Block)(nil), "bear.Block")
	proto.RegisterType((*Review)(nil), "bear.Review")
	proto.RegisterType((*BlockOrder)(nil), "bear.BlockOrder")
	proto.RegisterType((*User)(nil), "bear.User")
	proto.RegisterType((*Profile)(nil), "bear.Profile")
	proto.RegisterType((*Province)(nil), "bear.Province")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bear service

type BearClient interface {
	GetListBear(ctx context.Context, in *ListBearRequest, opts ...grpc.CallOption) (*ListBearResponse, error)
	GetBearDetail(ctx context.Context, in *BearRequest, opts ...grpc.CallOption) (*BearResponse, error)
	GetBearBlocks(ctx context.Context, in *BearBlockRequest, opts ...grpc.CallOption) (*BearBlockResponse, error)
	CreateBlocks(ctx context.Context, in *CreateBlockRequest, opts ...grpc.CallOption) (*CreateBlockResponse, error)
	GetBlocksToAssign(ctx context.Context, in *GetBlockRegisterRequest, opts ...grpc.CallOption) (*GetBlockRegisterResponse, error)
	PostReview(ctx context.Context, in *PostReviewRequest, opts ...grpc.CallOption) (*PostReviewResponse, error)
}

type bearClient struct {
	cc *grpc.ClientConn
}

func NewBearClient(cc *grpc.ClientConn) BearClient {
	return &bearClient{cc}
}

func (c *bearClient) GetListBear(ctx context.Context, in *ListBearRequest, opts ...grpc.CallOption) (*ListBearResponse, error) {
	out := new(ListBearResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/GetListBear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bearClient) GetBearDetail(ctx context.Context, in *BearRequest, opts ...grpc.CallOption) (*BearResponse, error) {
	out := new(BearResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/GetBearDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bearClient) GetBearBlocks(ctx context.Context, in *BearBlockRequest, opts ...grpc.CallOption) (*BearBlockResponse, error) {
	out := new(BearBlockResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/GetBearBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bearClient) CreateBlocks(ctx context.Context, in *CreateBlockRequest, opts ...grpc.CallOption) (*CreateBlockResponse, error) {
	out := new(CreateBlockResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/CreateBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bearClient) GetBlocksToAssign(ctx context.Context, in *GetBlockRegisterRequest, opts ...grpc.CallOption) (*GetBlockRegisterResponse, error) {
	out := new(GetBlockRegisterResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/GetBlocksToAssign", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bearClient) PostReview(ctx context.Context, in *PostReviewRequest, opts ...grpc.CallOption) (*PostReviewResponse, error) {
	out := new(PostReviewResponse)
	err := grpc.Invoke(ctx, "/bear.Bear/PostReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bear service

type BearServer interface {
	GetListBear(context.Context, *ListBearRequest) (*ListBearResponse, error)
	GetBearDetail(context.Context, *BearRequest) (*BearResponse, error)
	GetBearBlocks(context.Context, *BearBlockRequest) (*BearBlockResponse, error)
	CreateBlocks(context.Context, *CreateBlockRequest) (*CreateBlockResponse, error)
	GetBlocksToAssign(context.Context, *GetBlockRegisterRequest) (*GetBlockRegisterResponse, error)
	PostReview(context.Context, *PostReviewRequest) (*PostReviewResponse, error)
}

func RegisterBearServer(s *grpc.Server, srv BearServer) {
	s.RegisterService(&_Bear_serviceDesc, srv)
}

func _Bear_GetListBear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).GetListBear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/GetListBear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).GetListBear(ctx, req.(*ListBearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bear_GetBearDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).GetBearDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/GetBearDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).GetBearDetail(ctx, req.(*BearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bear_GetBearBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BearBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).GetBearBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/GetBearBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).GetBearBlocks(ctx, req.(*BearBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bear_CreateBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).CreateBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/CreateBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).CreateBlocks(ctx, req.(*CreateBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bear_GetBlocksToAssign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).GetBlocksToAssign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/GetBlocksToAssign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).GetBlocksToAssign(ctx, req.(*GetBlockRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bear_PostReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BearServer).PostReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bear.Bear/PostReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BearServer).PostReview(ctx, req.(*PostReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bear_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bear.Bear",
	HandlerType: (*BearServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListBear",
			Handler:    _Bear_GetListBear_Handler,
		},
		{
			MethodName: "GetBearDetail",
			Handler:    _Bear_GetBearDetail_Handler,
		},
		{
			MethodName: "GetBearBlocks",
			Handler:    _Bear_GetBearBlocks_Handler,
		},
		{
			MethodName: "CreateBlocks",
			Handler:    _Bear_CreateBlocks_Handler,
		},
		{
			MethodName: "GetBlocksToAssign",
			Handler:    _Bear_GetBlocksToAssign_Handler,
		},
		{
			MethodName: "PostReview",
			Handler:    _Bear_PostReview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/bear.proto",
}

func init() { proto.RegisterFile("pb/bear.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0xae, 0xd7, 0xb1, 0xfd, 0x6c, 0xa7, 0xce, 0x34, 0x38, 0x5b, 0xab, 0x04, 0x77, 0x51,
	0xc1, 0xcd, 0x21, 0x16, 0x86, 0x0b, 0xe5, 0x44, 0x69, 0x29, 0x91, 0x50, 0xa9, 0x96, 0x50, 0x0e,
	0x1c, 0xd0, 0xd8, 0x3b, 0x75, 0x46, 0x75, 0xbc, 0xee, 0xcc, 0xc4, 0xa5, 0xaa, 0x72, 0x41, 0xe2,
	0xcc, 0x01, 0x89, 0xaf, 0xc2, 0x07, 0x41, 0xe2, 0x13, 0x80, 0xc4, 0xc7, 0x40, 0xf3, 0x66, 0x76,
	0x77, 0xd6, 0x5b, 0x2b, 0xa8, 0xbd, 0x58, 0xf3, 0xfe, 0xf8, 0xfd, 0x7e, 0xef, 0xcf, 0xbc, 0x59,
	0xe8, 0xae, 0xa6, 0xe3, 0x29, 0xa3, 0xe2, 0x78, 0x25, 0x52, 0x95, 0x92, 0x40, 0x9f, 0x07, 0x37,
	0xe7, 0x69, 0x3a, 0x5f, 0xb0, 0x31, 0x5d, 0xf1, 0x31, 0x5d, 0x2e, 0x53, 0x45, 0x15, 0x4f, 0x97,
	0xd2, 0xf8, 0x44, 0x2f, 0x61, 0xef, 0x71, 0x2a, 0x55, 0xcc, 0xd6, 0x9c, 0xbd, 0x88, 0xd9, 0xf3,
	0x0b, 0x26, 0x15, 0xe9, 0xc3, 0xce, 0x85, 0x64, 0xe2, 0x24, 0x09, 0xbd, 0xa1, 0x37, 0xea, 0xc6,
	0x56, 0xd2, 0x7a, 0x1d, 0xf2, 0x24, 0x09, 0x7d, 0xa3, 0x37, 0x12, 0x21, 0x10, 0x08, 0xaa, 0x58,
	0x58, 0x43, 0x2d, 0x9e, 0xc9, 0x10, 0xda, 0x09, 0x93, 0x33, 0xc1, 0x57, 0x1a, 0x2e, 0x0c, 0x86,
	0xde, 0xa8, 0x15, 0xbb, 0xaa, 0xe8, 0x4b, 0x20, 0x2e, 0xb4, 0x5c, 0xa5, 0x4b, 0xc9, 0x34, 0x86,
	0x54, 0x54, 0x5d, 0x48, 0xc4, 0x6e, 0xc5, 0x56, 0x22, 0x21, 0x34, 0xce, 0x99, 0x94, 0x74, 0xce,
	0x10, 0xbc, 0x15, 0x67, 0x62, 0x74, 0x1b, 0xda, 0xf7, 0x18, 0x15, 0x57, 0x90, 0x8f, 0x9e, 0x40,
	0xc7, 0xb8, 0x59, 0xa0, 0x43, 0x08, 0xb4, 0x05, 0xbd, 0xda, 0x13, 0x38, 0xc6, 0xc2, 0x7d, 0x27,
	0x99, 0x88, 0x51, 0x4f, 0x3e, 0x80, 0x86, 0x40, 0x6a, 0x32, 0xf4, 0x87, 0xb5, 0x51, 0x7b, 0xd2,
	0x31, 0x2e, 0x96, 0x6f, 0x66, 0x8c, 0x6e, 0xc3, 0xb5, 0xaf, 0xb9, 0x54, 0x2e, 0x05, 0x02, 0xc1,
	0x8c, 0xab, 0x97, 0x96, 0x00, 0x9e, 0xa3, 0x4f, 0xa0, 0x57, 0xb8, 0x59, 0x0a, 0x43, 0xa8, 0x6b,
	0x28, 0x9d, 0x6a, 0x6d, 0x83, 0x83, 0x31, 0x44, 0x4f, 0xa0, 0xa7, 0xff, 0x71, 0x6f, 0x91, 0xce,
	0x9e, 0xbd, 0x45, 0x77, 0x92, 0xac, 0x3b, 0x41, 0x8c, 0xe7, 0xe8, 0x0c, 0xf6, 0x9c, 0xb8, 0x57,
	0x94, 0xfe, 0x33, 0xd8, 0xd5, 0x10, 0xe8, 0x7c, 0x9f, 0x2a, 0x96, 0x15, 0xe4, 0x7a, 0xc1, 0x37,
	0xb7, 0xc5, 0x1b, 0xae, 0xd1, 0x1c, 0xc8, 0x17, 0x82, 0x51, 0xc5, 0x4a, 0x39, 0x7c, 0x0a, 0xdd,
	0x92, 0x9f, 0xad, 0xc0, 0x6b, 0x23, 0x96, 0x3d, 0xb7, 0xa5, 0x19, 0x09, 0xb8, 0x5e, 0x02, 0x7a,
	0xd3, 0x79, 0x22, 0x77, 0xa0, 0x3e, 0xd5, 0x21, 0xc2, 0xda, 0x76, 0x4e, 0xc6, 0x23, 0x7a, 0x00,
	0x07, 0x0f, 0x99, 0xb2, 0x80, 0x73, 0x2e, 0x15, 0xbb, 0x6a, 0x0c, 0xf3, 0x6e, 0xf8, 0x4e, 0x37,
	0x9e, 0x43, 0x58, 0x0d, 0x63, 0xf9, 0x3b, 0x3c, 0xbd, 0x32, 0xcf, 0xb7, 0x6a, 0xcb, 0xbf, 0x1e,
	0x74, 0x4b, 0x1e, 0x64, 0x17, 0x7c, 0x9e, 0x91, 0xf5, 0x79, 0x42, 0x6e, 0x65, 0x65, 0xf0, 0xf1,
	0x82, 0xb4, 0x4d, 0x54, 0x43, 0xd2, 0x58, 0xc8, 0x4d, 0x68, 0x4d, 0xf3, 0x0e, 0xd6, 0x90, 0x5d,
	0xa1, 0xb8, 0x7a, 0x03, 0x38, 0xbd, 0xa9, 0x97, 0x7a, 0xb3, 0x0f, 0xf5, 0x95, 0xe0, 0x33, 0x16,
	0xee, 0x0c, 0xbd, 0x91, 0x17, 0x1b, 0x41, 0xa3, 0x71, 0xf9, 0x8d, 0x48, 0x98, 0x60, 0x49, 0xd8,
	0x18, 0x7a, 0xa3, 0x66, 0x5c, 0x28, 0x74, 0x9d, 0x10, 0xfa, 0x24, 0x09, 0x9b, 0x98, 0x43, 0x26,
	0x46, 0xff, 0x78, 0x50, 0x47, 0xda, 0x95, 0x14, 0x37, 0x18, 0xfa, 0x55, 0x86, 0x04, 0x82, 0x25,
	0x3d, 0xcf, 0x92, 0xc3, 0xb3, 0xe6, 0x71, 0x96, 0x5e, 0x88, 0x6f, 0x15, 0x15, 0xca, 0x66, 0x55,
	0x28, 0x34, 0x0f, 0x2d, 0x3c, 0x58, 0x26, 0x36, 0xa9, 0x4c, 0x34, 0xfc, 0xcd, 0x88, 0x3a, 0xfc,
	0xad, 0xa2, 0xc8, 0xb9, 0x89, 0x83, 0x61, 0x73, 0x3e, 0x82, 0x9e, 0x29, 0xa8, 0x43, 0xb3, 0x85,
	0x61, 0x2b, 0xfa, 0xe8, 0x77, 0x0f, 0x76, 0xcc, 0x72, 0xaa, 0x24, 0x7a, 0x0c, 0x1d, 0xdd, 0x7f,
	0x63, 0x65, 0x89, 0x6d, 0xa9, 0xbb, 0x6f, 0x4a, 0xf6, 0xd2, 0x42, 0x0f, 0xec, 0x42, 0x2f, 0x06,
	0x3a, 0x40, 0x6d, 0x36, 0xd0, 0x1b, 0x45, 0xac, 0x57, 0x17, 0xfd, 0xaf, 0x1e, 0x00, 0x36, 0x00,
	0x7b, 0x55, 0x21, 0x57, 0xd9, 0x05, 0x86, 0xdd, 0xff, 0xd9, 0x05, 0xd9, 0x0e, 0xaf, 0x6d, 0xd9,
	0xe1, 0xc5, 0x80, 0x05, 0xee, 0x80, 0x45, 0x7f, 0x78, 0x10, 0x68, 0xb7, 0x0a, 0x97, 0x7d, 0xa8,
	0xb3, 0x73, 0xca, 0x17, 0x76, 0x16, 0x8c, 0x40, 0x06, 0xd0, 0xd4, 0xe1, 0x9c, 0x49, 0xc8, 0x65,
	0x12, 0x41, 0x67, 0x45, 0xa5, 0x7c, 0x91, 0x8a, 0xe4, 0x2b, 0x2a, 0xcf, 0x2c, 0x50, 0x49, 0x47,
	0x3e, 0x84, 0xc6, 0x4a, 0xa4, 0x4f, 0xf9, 0x82, 0x61, 0x79, 0xda, 0x93, 0xae, 0x61, 0xfa, 0xd8,
	0x28, 0xe3, 0xcc, 0x6a, 0x6a, 0xb9, 0xe6, 0x33, 0x76, 0x9a, 0x3e, 0x63, 0x4b, 0x1c, 0x7f, 0xac,
	0x65, 0xae, 0x8a, 0x7e, 0xf1, 0xa1, 0x61, 0xff, 0x56, 0x21, 0xdf, 0x87, 0x1d, 0xba, 0xa6, 0x8a,
	0x0a, 0xcb, 0xde, 0x4a, 0x7a, 0xf0, 0x9e, 0x72, 0x21, 0x95, 0xc3, 0xbf, 0x50, 0xe8, 0xe4, 0x16,
	0xd4, 0x1a, 0x0d, 0xf9, 0x5c, 0xc6, 0x0b, 0xce, 0x85, 0x3a, 0xc3, 0x8d, 0x55, 0xb7, 0x17, 0x3c,
	0x53, 0x90, 0x1e, 0xd4, 0x24, 0xfb, 0x09, 0x59, 0x76, 0x63, 0x7d, 0x24, 0x47, 0xd0, 0x5c, 0x89,
	0x74, 0xcd, 0x97, 0x33, 0x86, 0x13, 0xde, 0x9e, 0xec, 0xe6, 0x99, 0xa2, 0x36, 0xce, 0xed, 0x1a,
	0x57, 0x2a, 0x2a, 0x62, 0x1d, 0xba, 0x89, 0xf7, 0x3c, 0x97, 0x37, 0x67, 0xaa, 0x55, 0x9d, 0xa9,
	0x47, 0xd0, 0xcc, 0x62, 0x92, 0x43, 0x80, 0x2c, 0x6a, 0xbe, 0x6e, 0x1d, 0x0d, 0xb6, 0xc8, 0x4a,
	0x8f, 0x74, 0x96, 0xbe, 0x6d, 0x91, 0xa3, 0x9b, 0xfc, 0x15, 0x40, 0xa0, 0x5f, 0x44, 0x72, 0x0a,
	0xed, 0x87, 0x4c, 0x65, 0x4f, 0x35, 0x79, 0xc7, 0xf0, 0xdf, 0x78, 0xe1, 0x07, 0xfd, 0x4d, 0xb5,
	0xd9, 0xd6, 0x51, 0xff, 0xe7, 0x3f, 0xff, 0xfe, 0xcd, 0xef, 0x91, 0xdd, 0xf1, 0xfa, 0x23, 0xfc,
	0x14, 0xc3, 0x1f, 0x49, 0xbe, 0x87, 0xae, 0xde, 0xf0, 0x8c, 0x8a, 0xfb, 0x4c, 0xe9, 0x91, 0xda,
	0xb3, 0xeb, 0xd4, 0x89, 0x49, 0x5c, 0x95, 0x8d, 0xf7, 0x1e, 0xc6, 0xbb, 0x41, 0x0e, 0xca, 0xf1,
	0xc6, 0xaf, 0xcc, 0xe5, 0xbb, 0x24, 0xd3, 0x3c, 0x30, 0xde, 0x0a, 0x49, 0xfa, 0x45, 0x14, 0xf7,
	0xc5, 0x1d, 0x1c, 0x54, 0xf4, 0x16, 0x62, 0x88, 0x10, 0x03, 0x12, 0x16, 0x10, 0x18, 0x69, 0xfc,
	0xca, 0x3c, 0xac, 0x97, 0xe4, 0x47, 0xe8, 0x38, 0x2f, 0xab, 0x24, 0xa1, 0x09, 0x55, 0x7d, 0xd6,
	0x07, 0x37, 0x5e, 0x63, 0xb1, 0x30, 0x03, 0x84, 0xd9, 0x8f, 0xae, 0x6d, 0xc0, 0xdc, 0xf5, 0x8e,
	0xc8, 0x25, 0xec, 0x65, 0xef, 0x9f, 0x3c, 0x4d, 0x3f, 0x97, 0x92, 0xcf, 0x97, 0xe4, 0x5d, 0x13,
	0x6b, 0xcb, 0xfb, 0x3a, 0x38, 0xdc, 0x66, 0xb6, 0x78, 0x77, 0x10, 0xef, 0x7d, 0x72, 0x6b, 0x33,
	0x2d, 0x61, 0x3d, 0x8b, 0x1a, 0xfe, 0x00, 0x50, 0x7c, 0x88, 0x12, 0x5b, 0xa8, 0xca, 0x57, 0xf1,
	0x20, 0xac, 0x1a, 0xb6, 0xe6, 0x66, 0x3e, 0x0e, 0xef, 0x7a, 0x47, 0xd3, 0x1d, 0xfc, 0xce, 0xfe,
	0xf8, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xcd, 0xa4, 0x46, 0x9c, 0x0b, 0x00, 0x00,
}
